//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ChwinockModel", "FK_Comments_0", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chwinock.Models.User), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Comment), true)]
[assembly: EdmRelationshipAttribute("ChwinockModel", "FK_Comments_1", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chwinock.Models.Report), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Comment), true)]
[assembly: EdmRelationshipAttribute("ChwinockModel", "FK_Reports_0", "Photos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chwinock.Models.Photo), "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Report), true)]
[assembly: EdmRelationshipAttribute("ChwinockModel", "FK_Ratings_0", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chwinock.Models.Report), "Ratings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Rating), true)]
[assembly: EdmRelationshipAttribute("ChwinockModel", "FK_Ratings_1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chwinock.Models.User), "Ratings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Rating), true)]
[assembly: EdmRelationshipAttribute("ChwinockModel", "ReportsWithAlcohol", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Report), "Alcohol", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Alcohol))]
[assembly: EdmRelationshipAttribute("ChwinockModel", "ReportsWithSongs", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Report), "Songs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chwinock.Models.Song))]

#endregion

namespace Chwinock.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ChwinockEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ChwinockEntities object using the connection string found in the 'ChwinockEntities' section of the application configuration file.
        /// </summary>
        public ChwinockEntities() : base("name=ChwinockEntities", "ChwinockEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChwinockEntities object.
        /// </summary>
        public ChwinockEntities(string connectionString) : base(connectionString, "ChwinockEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChwinockEntities object.
        /// </summary>
        public ChwinockEntities(EntityConnection connection) : base(connection, "ChwinockEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alcohol> Alcohols
        {
            get
            {
                if ((_Alcohols == null))
                {
                    _Alcohols = base.CreateObjectSet<Alcohol>("Alcohols");
                }
                return _Alcohols;
            }
        }
        private ObjectSet<Alcohol> _Alcohols;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rating> Ratings
        {
            get
            {
                if ((_Ratings == null))
                {
                    _Ratings = base.CreateObjectSet<Rating>("Ratings");
                }
                return _Ratings;
            }
        }
        private ObjectSet<Rating> _Ratings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Song> Songs
        {
            get
            {
                if ((_Songs == null))
                {
                    _Songs = base.CreateObjectSet<Song>("Songs");
                }
                return _Songs;
            }
        }
        private ObjectSet<Song> _Songs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alcohols EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlcohols(Alcohol alcohol)
        {
            base.AddObject("Alcohols", alcohol);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ratings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRatings(Rating rating)
        {
            base.AddObject("Ratings", rating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Songs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSongs(Song song)
        {
            base.AddObject("Songs", song);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChwinockModel", Name="Alcohol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alcohol : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alcohol object.
        /// </summary>
        /// <param name="alcoholID">Initial value of the AlcoholID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Alcohol CreateAlcohol(global::System.Guid alcoholID, global::System.String name)
        {
            Alcohol alcohol = new Alcohol();
            alcohol.AlcoholID = alcoholID;
            alcohol.Name = name;
            return alcohol;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AlcoholID
        {
            get
            {
                return _AlcoholID;
            }
            set
            {
                if (_AlcoholID != value)
                {
                    OnAlcoholIDChanging(value);
                    ReportPropertyChanging("AlcoholID");
                    _AlcoholID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlcoholID");
                    OnAlcoholIDChanged();
                }
            }
        }
        private global::System.Guid _AlcoholID;
        partial void OnAlcoholIDChanging(global::System.Guid value);
        partial void OnAlcoholIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Thoughts
        {
            get
            {
                return _Thoughts;
            }
            set
            {
                OnThoughtsChanging(value);
                ReportPropertyChanging("Thoughts");
                _Thoughts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Thoughts");
                OnThoughtsChanged();
            }
        }
        private global::System.String _Thoughts;
        partial void OnThoughtsChanging(global::System.String value);
        partial void OnThoughtsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _Price;
        partial void OnPriceChanging(Nullable<global::System.Int32> value);
        partial void OnPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "ReportsWithAlcohol", "Reports")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("ChwinockModel.ReportsWithAlcohol", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("ChwinockModel.ReportsWithAlcohol", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChwinockModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Comment CreateComment(global::System.Guid commentID, global::System.String userID, global::System.Guid reportID, global::System.String content, global::System.DateTime createDate)
        {
            Comment comment = new Comment();
            comment.CommentID = commentID;
            comment.UserID = userID;
            comment.ReportID = reportID;
            comment.Content = content;
            comment.CreateDate = createDate;
            return comment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Guid _CommentID;
        partial void OnCommentIDChanging(global::System.Guid value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Guid _ReportID;
        partial void OnReportIDChanging(global::System.Guid value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Comments_0", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChwinockModel.FK_Comments_0", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChwinockModel.FK_Comments_0", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChwinockModel.FK_Comments_0", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChwinockModel.FK_Comments_0", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Comments_1", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("ChwinockModel.FK_Comments_1", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("ChwinockModel.FK_Comments_1", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("ChwinockModel.FK_Comments_1", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("ChwinockModel.FK_Comments_1", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChwinockModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="photoID">Initial value of the PhotoID property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        public static Photo CreatePhoto(global::System.Guid photoID, global::System.String url)
        {
            Photo photo = new Photo();
            photo.PhotoID = photoID;
            photo.Url = url;
            return photo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                if (_PhotoID != value)
                {
                    OnPhotoIDChanging(value);
                    ReportPropertyChanging("PhotoID");
                    _PhotoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoID");
                    OnPhotoIDChanged();
                }
            }
        }
        private global::System.Guid _PhotoID;
        partial void OnPhotoIDChanging(global::System.Guid value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private Nullable<global::System.Double> _Lat;
        partial void OnLatChanging(Nullable<global::System.Double> value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Lng
        {
            get
            {
                return _Lng;
            }
            set
            {
                OnLngChanging(value);
                ReportPropertyChanging("Lng");
                _Lng = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lng");
                OnLngChanged();
            }
        }
        private Nullable<global::System.Double> _Lng;
        partial void OnLngChanging(Nullable<global::System.Double> value);
        partial void OnLngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ReportID;
        partial void OnReportIDChanging(Nullable<global::System.Guid> value);
        partial void OnReportIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Reports_0", "Reports")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("ChwinockModel.FK_Reports_0", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("ChwinockModel.FK_Reports_0", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChwinockModel", Name="Rating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rating object.
        /// </summary>
        /// <param name="ratingID">Initial value of the RatingID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="rank">Initial value of the Rank property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Rating CreateRating(global::System.Guid ratingID, global::System.Guid reportID, global::System.Int32 rank, global::System.String userID)
        {
            Rating rating = new Rating();
            rating.RatingID = ratingID;
            rating.ReportID = reportID;
            rating.Rank = rank;
            rating.UserID = userID;
            return rating;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RatingID
        {
            get
            {
                return _RatingID;
            }
            set
            {
                if (_RatingID != value)
                {
                    OnRatingIDChanging(value);
                    ReportPropertyChanging("RatingID");
                    _RatingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RatingID");
                    OnRatingIDChanged();
                }
            }
        }
        private global::System.Guid _RatingID;
        partial void OnRatingIDChanging(global::System.Guid value);
        partial void OnRatingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Guid _ReportID;
        partial void OnReportIDChanging(global::System.Guid value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.Int32 _Rank;
        partial void OnRankChanging(global::System.Int32 value);
        partial void OnRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Ratings_0", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("ChwinockModel.FK_Ratings_0", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("ChwinockModel.FK_Ratings_0", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("ChwinockModel.FK_Ratings_0", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("ChwinockModel.FK_Ratings_0", "Reports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Ratings_1", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChwinockModel.FK_Ratings_1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChwinockModel.FK_Ratings_1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChwinockModel.FK_Ratings_1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChwinockModel.FK_Ratings_1", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChwinockModel", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="photoID">Initial value of the PhotoID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Report CreateReport(global::System.Guid reportID, global::System.String title, global::System.String author, global::System.String content, global::System.Guid photoID, global::System.DateTime createDate)
        {
            Report report = new Report();
            report.ReportID = reportID;
            report.Title = title;
            report.Author = author;
            report.Content = content;
            report.PhotoID = photoID;
            report.CreateDate = createDate;
            return report;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                if (_ReportID != value)
                {
                    OnReportIDChanging(value);
                    ReportPropertyChanging("ReportID");
                    _ReportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportID");
                    OnReportIDChanged();
                }
            }
        }
        private global::System.Guid _ReportID;
        partial void OnReportIDChanging(global::System.Guid value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                OnPhotoIDChanging(value);
                ReportPropertyChanging("PhotoID");
                _PhotoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoID");
                OnPhotoIDChanged();
            }
        }
        private global::System.Guid _PhotoID;
        partial void OnPhotoIDChanging(global::System.Guid value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Comments_1", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("ChwinockModel.FK_Comments_1", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("ChwinockModel.FK_Comments_1", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Reports_0", "Photos")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("ChwinockModel.FK_Reports_0", "Photos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("ChwinockModel.FK_Reports_0", "Photos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("ChwinockModel.FK_Reports_0", "Photos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("ChwinockModel.FK_Reports_0", "Photos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Ratings_0", "Ratings")]
        public EntityCollection<Rating> Ratings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rating>("ChwinockModel.FK_Ratings_0", "Ratings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rating>("ChwinockModel.FK_Ratings_0", "Ratings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "ReportsWithAlcohol", "Alcohol")]
        public EntityCollection<Alcohol> Alcohols
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Alcohol>("ChwinockModel.ReportsWithAlcohol", "Alcohol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Alcohol>("ChwinockModel.ReportsWithAlcohol", "Alcohol", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "ReportsWithSongs", "Songs")]
        public EntityCollection<Song> Songs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Song>("ChwinockModel.ReportsWithSongs", "Songs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Song>("ChwinockModel.ReportsWithSongs", "Songs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChwinockModel", Name="Song")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Song : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Song object.
        /// </summary>
        /// <param name="songID">Initial value of the SongID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="artist">Initial value of the Artist property.</param>
        public static Song CreateSong(global::System.Guid songID, global::System.String name, global::System.String artist)
        {
            Song song = new Song();
            song.SongID = songID;
            song.Name = name;
            song.Artist = artist;
            return song;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SongID
        {
            get
            {
                return _SongID;
            }
            set
            {
                if (_SongID != value)
                {
                    OnSongIDChanging(value);
                    ReportPropertyChanging("SongID");
                    _SongID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SongID");
                    OnSongIDChanged();
                }
            }
        }
        private global::System.Guid _SongID;
        partial void OnSongIDChanging(global::System.Guid value);
        partial void OnSongIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ReportID;
        partial void OnReportIDChanging(Nullable<global::System.Guid> value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "ReportsWithSongs", "Reports")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("ChwinockModel.ReportsWithSongs", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("ChwinockModel.ReportsWithSongs", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChwinockModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static User CreateUser(global::System.String userID, global::System.String name)
        {
            User user = new User();
            user.UserID = userID;
            user.Name = name;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChillName
        {
            get
            {
                return _ChillName;
            }
            set
            {
                OnChillNameChanging(value);
                ReportPropertyChanging("ChillName");
                _ChillName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChillName");
                OnChillNameChanged();
            }
        }
        private global::System.String _ChillName;
        partial void OnChillNameChanging(global::System.String value);
        partial void OnChillNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Comments_0", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("ChwinockModel.FK_Comments_0", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("ChwinockModel.FK_Comments_0", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChwinockModel", "FK_Ratings_1", "Ratings")]
        public EntityCollection<Rating> Ratings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rating>("ChwinockModel.FK_Ratings_1", "Ratings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rating>("ChwinockModel.FK_Ratings_1", "Ratings", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
